Step 1:

Load & Preprocess Dataset

Let’s proceed to:

Load the data

Encode categorical features

Drop or hash IDs (optional)

Normalize numeric features

Split into train/test

Save preprocessed dataset for training

How to Make Your Project Closer to Real-World Conditions
You don’t need a live production pipeline to simulate complexity. You can:

1. Add noise and overlap in your synthetic generation:
   Let 5–10% of legitimate transactions break some behavioral rules.

Let a few fraud cases fall within normal ranges.

Slightly mix device, time, or geo features between classes.

2. Introduce label noise
   Randomly flip 1–2% of the labels to simulate real-world labeling errors.

3. Make your profiles less rigid
   Some users may vary widely in amount or device.

This forces the model to learn subtler patterns, not just rules.

4. Evaluate on human-interpretable anomalies
   Pick one user profile.

Plot their transactions.

Inject an outlier and ask: “Would the model flag this?”

5. Down the road: Train on semi-real data (e.g., open datasets like PaySim).
